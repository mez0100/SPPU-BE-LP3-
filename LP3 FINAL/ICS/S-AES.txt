1.	S-AES
$ sudo apt-get install build-essential python3-dev
$ pip install pycryptodome
$ pip install pycryptodome-test-vectors
$ python3 -m Cryptodome.SelfTest

Jupyter Notebook Install: !pip install PyCryptodome

from Crypto.Cipher import AES
from secrets import token_bytes

key = token_bytes(16)

def encrypt(msg):
    cipher = AES.new(key, AES.MODE_EAX)
    nonce = cipher.nonce
    ciphertext, tag = cipher.encrypt_and_digest(msg.encode('ascii'))
    return nonce, ciphertext, tag

def decrypt(nonce, ciphertext, tag):
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)
    plaintext = cipher.decrypt(ciphertext)
    try:
        cipher.verify(tag)
        return plaintext.decode('ascii')
    except:
        return False

nonce, ciphertext, tag = encrypt(input('Enter a message: '))
plaintext = decrypt(nonce, ciphertext, tag)
print(f'Cipher text: {ciphertext}')
if not plaintext:
    print('Message is corrupted')
else:
    print(f'Plain text: {plaintext}')

output:
Enter a message: hello arumnhoi
Cipher text: b'\xf7\x8a\xbdN\x9d\x03\xc0\xb9yr\x07\x8bY\xc8'
Plain text: hello arumnhoi
Plain text: AES Implementation using PyCryptodome
